{
  "version": 3,
  "sources": ["../../toggle-selection/index.js", "../../copy-to-clipboard/index.js", "../../@chakra-ui/hooks/src/use-previous.ts", "../../@chakra-ui/hooks/src/use-shortcut.ts", "../../@chakra-ui/hooks/src/use-safe-layout-effect.ts", "../../@chakra-ui/hooks/src/use-callback-ref.ts", "../../@chakra-ui/hooks/src/use-timeout.ts", "../../@chakra-ui/hooks/src/use-why-update.ts", "../../@chakra-ui/hooks/src/use-interval.ts", "../../@chakra-ui/hooks/src/use-latest-ref.ts", "../../@chakra-ui/hooks/src/use-merge-refs.ts", "../../@chakra-ui/hooks/src/use-event-listener.ts", "../../@chakra-ui/hooks/src/use-mouse-down-ref.ts", "../../@chakra-ui/hooks/src/use-outside-click.ts", "../../@chakra-ui/hooks/src/use-pointer-event.ts", "../../@chakra-ui/hooks/src/use-unmount-effect.ts", "../../@chakra-ui/hooks/src/use-pan-gesture.ts", "../../@chakra-ui/hooks/src/use-id.ts", "../../@chakra-ui/hooks/src/use-controllable.ts", "../../@chakra-ui/hooks/src/use-disclosure.ts", "../../@chakra-ui/hooks/src/use-event-listener-map.ts", "../../@chakra-ui/hooks/src/use-update-effect.ts", "../../@chakra-ui/hooks/src/use-focus-effect.ts", "../../@chakra-ui/hooks/src/use-focus-on-hide.ts", "../../@chakra-ui/hooks/src/use-focus-on-pointerdown.ts", "../../@chakra-ui/hooks/src/use-focus-on-show.ts", "../../@chakra-ui/hooks/src/use-force-update.ts", "../../@chakra-ui/hooks/src/use-animation-state.ts", "../../@chakra-ui/hooks/src/use-boolean.ts", "../../@chakra-ui/hooks/src/use-clipboard.ts", "../../@chakra-ui/hooks/src/use-const.ts", "../../@chakra-ui/hooks/src/use-dimensions.ts"],
  "sourcesContent": ["\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n", "\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"âŒ˜\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n", "import { useRef, useEffect } from \"react\"\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T | undefined>()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current as T\n}\n", "import { useEffect, useRef, useState } from \"react\"\n\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\nfunction isPrintableCharacter(event: React.KeyboardEvent) {\n  const { key } = event\n  return key.length === 1 || (key.length > 1 && /[^a-zA-Z0-9]/.test(key))\n}\n\nexport interface UseShortcutProps {\n  timeout?: number\n  preventDefault?: (event: React.KeyboardEvent) => boolean\n}\n\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\nexport function useShortcut(props: UseShortcutProps = {}) {\n  const { timeout = 300, preventDefault = () => true } = props\n\n  const [keys, setKeys] = useState<string[]>([])\n  const timeoutRef = useRef<any>()\n\n  const flush = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current)\n      timeoutRef.current = null\n    }\n  }\n\n  const clearKeysAfterDelay = () => {\n    flush()\n    timeoutRef.current = setTimeout(() => {\n      setKeys([])\n      timeoutRef.current = null\n    }, timeout)\n  }\n\n  useEffect(() => flush, [])\n\n  type Callback = (keysSoFar: string) => void\n\n  function onKeyDown(fn: Callback) {\n    return (event: React.KeyboardEvent) => {\n      if (event.key === \"Backspace\") {\n        const keysCopy = [...keys]\n        keysCopy.pop()\n        setKeys(keysCopy)\n        return\n      }\n\n      if (isPrintableCharacter(event)) {\n        const keysCopy = keys.concat(event.key)\n\n        if (preventDefault(event)) {\n          event.preventDefault()\n          event.stopPropagation()\n        }\n\n        setKeys(keysCopy)\n        fn(keysCopy.join(\"\"))\n\n        clearKeysAfterDelay()\n      }\n    }\n  }\n\n  return onKeyDown\n}\n", "import { isBrowser } from \"@chakra-ui/utils\"\nimport { useEffect, useLayoutEffect } from \"react\"\n\nexport const useSafeLayoutEffect = isBrowser ? useLayoutEffect : useEffect\n", "import { useCallback, useRef } from \"react\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\n\n/**\n * React hook to persist any value between renders,\n * but keeps it up-to-date if it changes.\n *\n * @param fn the function to persist\n * @param deps the function dependency list\n */\nexport function useCallbackRef<T extends (...args: any[]) => any>(\n  fn: T | undefined,\n  deps: React.DependencyList = [],\n): T {\n  const ref = useRef(fn)\n\n  useSafeLayoutEffect(() => {\n    ref.current = fn\n  })\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(((...args) => ref.current?.(...args)) as T, deps)\n}\n", "import { useEffect } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\n/**\n * React hook that provides a declarative `setTimeout`\n *\n * @param callback the callback to run after specified delay\n * @param delay the delay (in ms)\n */\nexport function useTimeout(\n  callback: (...args: any[]) => void,\n  delay: number | null,\n) {\n  const fn = useCallbackRef(callback)\n\n  useEffect(() => {\n    if (delay == null) return undefined\n\n    let timeoutId: number | null = null\n\n    timeoutId = window.setTimeout(() => {\n      fn()\n    }, delay)\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [delay, fn])\n}\n", "import { useEffect, useRef } from \"react\"\n\nexport function useWhyDidYouUpdate(name: string, props: any) {\n  const previousProps = useRef<any>()\n\n  useEffect(() => {\n    if (previousProps.current) {\n      const allKeys = Object.keys({ ...previousProps.current, ...props })\n      const changesObj: Record<string, any> = {}\n      allKeys.forEach((key) => {\n        if (previousProps.current[key] !== props[key]) {\n          changesObj[key] = {\n            from: previousProps.current[key],\n            to: props[key],\n          }\n        }\n      })\n\n      if (Object.keys(changesObj).length) {\n        console.log(\"[why-did-you-update]\", name, changesObj)\n      }\n    }\n\n    previousProps.current = props\n  })\n}\n", "import { useEffect } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\n/**\n * React Hook that provides a declarative `setInterval`\n *\n * @param callback the callback to execute at interval\n * @param delay the `setInterval` delay (in ms)\n */\nexport function useInterval(callback: () => void, delay: number | null) {\n  const fn = useCallbackRef(callback)\n\n  useEffect(() => {\n    let intervalId: number | null = null\n    const tick = () => fn()\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay)\n    }\n    return () => {\n      if (intervalId) {\n        window.clearInterval(intervalId)\n      }\n    }\n  }, [delay, fn])\n}\n", "import { useRef } from \"react\"\n\n/**\n * React hook to persist any value between renders,\n * but keeps it up-to-date if it changes.\n *\n * @param value the value or function to persist\n */\nexport function useLatestRef<T>(value: T) {\n  const ref = useRef<T | null>(null)\n  ref.current = value\n  return ref as React.MutableRefObject<T>\n}\n", "/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { useMemo } from \"react\"\n\ntype ReactRef<T> = React.Ref<T> | React.MutableRefObject<T>\n\nexport function assignRef<T = any>(ref: ReactRef<T> | undefined, value: T) {\n  if (ref == null) return\n\n  if (typeof ref === \"function\") {\n    ref(value)\n    return\n  }\n\n  try {\n    // @ts-ignore\n    ref.current = value\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`)\n  }\n}\n\n/**\n * React hook that merges react refs into a single memoized function\n *\n * @example\n * import React from \"react\";\n * import { useMergeRefs } from `@chakra-ui/hooks`;\n *\n * const Component = React.forwardRef((props, ref) => {\n *   const internalRef = React.useRef();\n *   return <div {...props} ref={useMergeRefs(internalRef, ref)} />;\n * });\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-merge-refs\n */\nexport function useMergeRefs<T>(...refs: (ReactRef<T> | undefined)[]) {\n  return useMemo(() => {\n    if (refs.every((ref) => ref == null)) {\n      return null\n    }\n    return (node: T) => {\n      refs.forEach((ref) => {\n        if (ref) assignRef(ref, node)\n      })\n    }\n  }, refs)\n}\n", "import { runIfFn } from \"@chakra-ui/utils\"\nimport { useEffect } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\ntype DocumentOrElement = Document | HTMLElement | null\n\nexport type EventListenerEnv = (() => DocumentOrElement) | DocumentOrElement\n\n/**\n * React hook to manage browser event listeners\n *\n * @param event the event name\n * @param handler the event handler function to execute\n * @param env the dom environment to execute against (defaults to `document`)\n * @param options the event listener options\n *\n * @internal\n */\nexport function useEventListener<K extends keyof DocumentEventMap>(\n  event: K | (string & {}),\n  handler?: (event: DocumentEventMap[K]) => void,\n  env?: EventListenerEnv,\n  options?: boolean | AddEventListenerOptions,\n) {\n  const listener = useCallbackRef(handler) as EventListener\n\n  useEffect(() => {\n    const node = runIfFn(env) ?? document\n\n    if (!handler) {\n      return\n    }\n\n    node.addEventListener(event, listener, options)\n    return () => {\n      node.removeEventListener(event, listener, options)\n    }\n  }, [event, env, options, listener, handler])\n\n  return () => {\n    const node = runIfFn(env) ?? document\n    node.removeEventListener(event, listener, options)\n  }\n}\n", "import { useRef } from \"react\"\nimport { useEventListener } from \"./use-event-listener\"\n\nexport function useMouseDownRef(shouldListen = true) {\n  const mouseDownRef = useRef<EventTarget | null>()\n\n  useEventListener(\"mousedown\", (event) => {\n    if (shouldListen) {\n      mouseDownRef.current = event.target\n    }\n  })\n\n  return mouseDownRef as React.RefObject<HTMLElement>\n}\n", "import { getOwnerDocument } from \"@chakra-ui/utils\"\nimport { useEffect, useRef } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\nexport interface UseOutsideClickProps {\n  /**\n   * Whether the hook is enabled\n   */\n  enabled?: boolean\n  /**\n   * The reference to a DOM element.\n   */\n  ref: React.RefObject<HTMLElement>\n  /**\n   * Function invoked when a click is triggered outside the referenced element.\n   */\n  handler?: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers, so they can close\n * when a user clicks outside them.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-outside-click\n */\nexport function useOutsideClick(props: UseOutsideClickProps) {\n  const { ref, handler, enabled = true } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    if (!enabled) return\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n    doc.addEventListener(\"mousedown\", onPointerDown, true)\n    doc.addEventListener(\"mouseup\", onMouseUp, true)\n    doc.addEventListener(\"touchstart\", onPointerDown, true)\n    doc.addEventListener(\"touchend\", onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true)\n      doc.removeEventListener(\"mouseup\", onMouseUp, true)\n      doc.removeEventListener(\"touchstart\", onPointerDown, true)\n      doc.removeEventListener(\"touchend\", onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state, enabled])\n}\n\nfunction isValidEvent(event: Event, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n\n  if (target) {\n    const doc = getOwnerDocument(target)\n    if (!doc.contains(target)) return false\n  }\n\n  return !ref.current?.contains(target)\n}\n", "/**\n * Credit goes to `framer-motion` of this useful utilities.\n * License can be found here: https://github.com/framer/motion\n */\n\nimport {\n  EventListenerWithPointInfo,\n  getPointerEventName,\n  wrapPointerEventHandler,\n} from \"@chakra-ui/utils\"\nimport { EventListenerEnv, useEventListener } from \"./use-event-listener\"\n\n/**\n * @internal\n */\nexport function usePointerEvent(\n  env: EventListenerEnv,\n  eventName: string,\n  handler: EventListenerWithPointInfo,\n  options?: AddEventListenerOptions,\n) {\n  return useEventListener(\n    getPointerEventName(eventName),\n    wrapPointerEventHandler(handler, eventName === \"pointerdown\"),\n    env,\n    options,\n  )\n}\n", "import { useEffect } from \"react\"\n\nexport function useUnmountEffect(fn: () => void, deps: any[] = []) {\n  return useEffect(\n    () => () => fn(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  )\n}\n", "import {\n  AnyPointerEvent,\n  noop,\n  PanEventHandler,\n  PanSession,\n  PanSessionHandlers,\n} from \"@chakra-ui/utils\"\nimport { useEffect, useRef } from \"react\"\nimport { usePointerEvent } from \"./use-pointer-event\"\nimport { useUnmountEffect } from \"./use-unmount-effect\"\n\nexport interface UsePanGestureProps {\n  onPan?: PanEventHandler\n  onPanStart?: PanEventHandler\n  onPanEnd?: PanEventHandler\n  onPanSessionStart?: PanEventHandler\n  onPanSessionEnd?: PanEventHandler\n  threshold?: number\n}\n\nexport function usePanGesture(\n  ref: React.RefObject<HTMLElement>,\n  props: UsePanGestureProps,\n) {\n  const {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold,\n  } = props\n\n  const hasPanEvents = Boolean(\n    onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd,\n  )\n\n  const panSession = useRef<PanSession | null>(null)\n\n  const handlers: Partial<PanSessionHandlers> = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd(event, info) {\n      panSession.current = null\n      onPanEnd?.(event, info)\n    },\n  }\n\n  useEffect(() => {\n    panSession.current?.updateHandlers(handlers)\n  })\n\n  function onPointerDown(event: AnyPointerEvent) {\n    panSession.current = new PanSession(event, handlers, threshold)\n  }\n\n  usePointerEvent(\n    () => ref.current,\n    \"pointerdown\",\n    hasPanEvents ? onPointerDown : noop,\n  )\n\n  useUnmountEffect(() => {\n    panSession.current?.end()\n    panSession.current = null\n  })\n}\n", "import { useCallback, useId as useReactId, useMemo, useState } from \"react\"\n\nexport function useId(idProp?: string, prefix?: string): string {\n  const id = useReactId()\n\n  return useMemo(\n    () => idProp || [prefix, id].filter(Boolean).join(\"-\"),\n    [idProp, prefix, id],\n  )\n}\n\n/**\n * React hook to generate ids for use in compound components\n *\n * @param idProp the external id passed from the user\n * @param prefixes array of prefixes to use\n *\n * @example\n *\n * ```js\n * const [buttonId, menuId] = useIds(\"52\", \"button\", \"menu\")\n *\n * // buttonId will be `button-52`\n * // menuId will be `menu-52`\n * ```\n */\nexport function useIds(idProp?: string, ...prefixes: string[]) {\n  const id = useId(idProp)\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`)\n  }, [id, prefixes])\n}\n\n/**\n * Used to generate an id, and after render, check if that id is rendered, so we know\n * if we can use it in places such as `aria-labelledby`.\n *\n * @param partId - The unique id for the component part\n *\n * @example\n * const { ref, id } = useOptionalPart<HTMLInputElement>(`${id}-label`)\n */\nexport function useOptionalPart<T = any>(partId: string) {\n  const [id, setId] = useState<string | null>(null)\n  const ref = useCallback(\n    (node: T) => {\n      setId(node ? partId : null)\n    },\n    [partId],\n  )\n  return { ref, id, isRendered: Boolean(id) }\n}\n", "import { runIfFn } from \"@chakra-ui/utils\"\nimport { useCallback, useState } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\nexport function useControllableProp<T>(prop: T | undefined, state: T) {\n  const isControlled = prop !== undefined\n  const value = isControlled && typeof prop !== \"undefined\" ? prop : state\n  return [isControlled, value] as const\n}\n\nexport interface UseControllableStateProps<T> {\n  /**\n   * The value to used in controlled mode\n   */\n  value?: T\n  /**\n   * The initial value to be used, in uncontrolled mode\n   */\n  defaultValue?: T | (() => T)\n  /**\n   * The callback fired when the value changes\n   */\n  onChange?: (value: T) => void\n  /**\n   * The function that determines if the state should be updated\n   */\n  shouldUpdate?: (prev: T, next: T) => boolean\n}\n\n/**\n * React hook for using controlling component state.\n * @param props\n */\nexport function useControllableState<T>(props: UseControllableStateProps<T>) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next,\n  } = props\n  const onChangeProp = useCallbackRef(onChange)\n  const shouldUpdateProp = useCallbackRef(shouldUpdate)\n\n  const [valueState, setValue] = useState(defaultValue as T)\n\n  const isControlled = valueProp !== undefined\n  const value = isControlled ? (valueProp as T) : valueState\n\n  const updateValue = useCallback(\n    (next: React.SetStateAction<T>) => {\n      const nextValue = runIfFn(next, value)\n\n      if (!shouldUpdateProp(value, nextValue)) {\n        return\n      }\n\n      if (!isControlled) {\n        setValue(nextValue)\n      }\n\n      onChangeProp(nextValue)\n    },\n    [isControlled, onChangeProp, value, shouldUpdateProp],\n  )\n\n  return [value, updateValue] as [T, React.Dispatch<React.SetStateAction<T>>]\n}\n", "import { callAllHandlers } from \"@chakra-ui/utils\"\nimport { useControllableProp } from \"./use-controllable\"\nimport { useId } from \"./use-id\"\nimport { useCallbackRef } from \"./use-callback-ref\"\nimport { useCallback, useState } from \"react\"\n\nexport interface UseDisclosureProps {\n  isOpen?: boolean\n  defaultIsOpen?: boolean\n  onClose?(): void\n  onOpen?(): void\n  id?: string\n}\n\nexport function useDisclosure(props: UseDisclosureProps = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp,\n  } = props\n\n  const onOpenPropCallbackRef = useCallbackRef(onOpenProp)\n  const onClosePropCallbackRef = useCallbackRef(onCloseProp)\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false)\n  const [isControlled, isOpen] = useControllableProp(isOpenProp, isOpenState)\n\n  const id = useId(idProp, \"disclosure\")\n\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false)\n    }\n    onClosePropCallbackRef?.()\n  }, [isControlled, onClosePropCallbackRef])\n\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true)\n    }\n    onOpenPropCallbackRef?.()\n  }, [isControlled, onOpenPropCallbackRef])\n\n  const onToggle = useCallback(() => {\n    const action = isOpen ? onClose : onOpen\n    action()\n  }, [isOpen, onOpen, onClose])\n\n  return {\n    isOpen: !!isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps: (props: any = {}) => ({\n      ...props,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick: callAllHandlers(props.onClick, onToggle),\n    }),\n    getDisclosureProps: (props: any = {}) => ({\n      ...props,\n      hidden: !isOpen,\n      id,\n    }),\n  }\n}\n\nexport type UseDisclosureReturn = ReturnType<typeof useDisclosure>\n", "import {\n  PointerEventInfo,\n  getPointerEventName,\n  wrapPointerEventHandler,\n  EventListenerWithPointInfo,\n} from \"@chakra-ui/utils\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\ninterface EventListeners {\n  add<K extends keyof DocumentEventMap>(\n    el: EventTarget,\n    type: K,\n    listener: (ev: DocumentEventMap[K], info: PointerEventInfo) => any,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  add(\n    el: EventTarget,\n    type: string,\n    listener: EventListenerWithPointInfo,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  remove<K extends keyof DocumentEventMap>(\n    el: EventTarget,\n    type: K,\n    listener: (ev: DocumentEventMap[K], info: PointerEventInfo) => any,\n    options?: boolean | EventListenerOptions,\n  ): void\n  remove(\n    el: EventTarget,\n    type: string,\n    listener: EventListenerWithPointInfo,\n    options?: boolean | EventListenerOptions,\n  ): void\n}\n\nexport function useEventListenerMap(): EventListeners {\n  const listeners = useRef(new Map())\n  const currentListeners = listeners.current\n\n  const add = useCallback((el: any, type: any, listener: any, options: any) => {\n    const pointerEventListener = wrapPointerEventHandler(\n      listener,\n      type === \"pointerdown\",\n    )\n    listeners.current.set(listener, {\n      __listener: pointerEventListener,\n      type: getPointerEventName(type),\n      el,\n      options,\n    })\n    el.addEventListener(type, pointerEventListener, options)\n  }, [])\n\n  const remove = useCallback(\n    (el: any, type: any, listener: any, options: any) => {\n      const { __listener: pointerEventListener } =\n        listeners.current.get(listener)\n      el.removeEventListener(type, pointerEventListener, options)\n      listeners.current.delete(pointerEventListener)\n    },\n    [],\n  )\n\n  useEffect(\n    () => () => {\n      currentListeners.forEach((value, key) => {\n        remove(value.el, value.type, key, value.options)\n      })\n    },\n    [remove, currentListeners],\n  )\n\n  return { add, remove }\n}\n", "import { useEffect, useRef } from \"react\"\n\n/**\n * React effect hook that invokes only on update.\n * It doesn't invoke on mount\n */\nexport const useUpdateEffect: typeof useEffect = (effect, deps) => {\n  const renderCycleRef = useRef(false)\n  const effectCycleRef = useRef(false)\n\n  useEffect(() => {\n    const isMounted = renderCycleRef.current\n    const shouldRun = isMounted && effectCycleRef.current\n    if (shouldRun) {\n      return effect()\n    }\n    effectCycleRef.current = true\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps)\n\n  useEffect(() => {\n    renderCycleRef.current = true\n    return () => {\n      renderCycleRef.current = false\n    }\n  }, [])\n}\n", "import { hasFocusWithin, focus } from \"@chakra-ui/utils\"\nimport { useUpdateEffect } from \"./use-update-effect\"\n\nexport type UseFocusEffectOptions = {\n  shouldFocus: boolean\n  preventScroll?: boolean\n}\n/**\n * React hook to focus an element conditionally\n *\n * @param ref the ref of the element to focus\n * @param options focus management options\n */\nexport function useFocusEffect<T extends HTMLElement>(\n  ref: React.RefObject<T>,\n  options: UseFocusEffectOptions,\n) {\n  const { shouldFocus, preventScroll } = options\n\n  useUpdateEffect(() => {\n    const node = ref.current\n\n    if (!node || !shouldFocus) return\n\n    if (!hasFocusWithin(node)) {\n      focus(node, { preventScroll, nextTick: true })\n    }\n  }, [shouldFocus, ref, preventScroll])\n}\n", "import {\n  contains,\n  focus,\n  FocusableElement,\n  getActiveElement,\n  isTabbable,\n} from \"@chakra-ui/utils\"\nimport { RefObject } from \"react\"\nimport { useUpdateEffect } from \"./use-update-effect\"\n\nexport interface UseFocusOnHideOptions {\n  focusRef: RefObject<FocusableElement>\n  shouldFocus?: boolean\n  visible?: boolean\n}\n\nfunction preventReturnFocus(containerRef: React.RefObject<HTMLElement>) {\n  const el = containerRef.current\n  if (!el) return false\n\n  const activeElement = getActiveElement(el)\n\n  if (!activeElement) return false\n  if (contains(el, activeElement)) return false\n  if (isTabbable(activeElement)) return true\n\n  return false\n}\n\n/**\n * Popover hook to manage the focus when the popover closes or hides.\n *\n * We either want to return focus back to the popover trigger or\n * let focus proceed normally if user moved to another interactive\n * element in the viewport.\n */\nexport function useFocusOnHide(\n  containerRef: RefObject<HTMLElement>,\n  options: UseFocusOnHideOptions,\n) {\n  const { shouldFocus: shouldFocusProp, visible, focusRef } = options\n\n  const shouldFocus = shouldFocusProp && !visible\n\n  useUpdateEffect(() => {\n    if (!shouldFocus) return\n\n    if (preventReturnFocus(containerRef)) {\n      return\n    }\n\n    const el = focusRef?.current || containerRef.current\n\n    if (el) {\n      focus(el, { nextTick: true })\n    }\n  }, [shouldFocus, containerRef, focusRef])\n}\n", "import {\n  contains,\n  detectBrowser,\n  focus,\n  getOwnerDocument,\n  isActiveElement,\n  isRefObject,\n} from \"@chakra-ui/utils\"\nimport { usePointerEvent } from \"./use-pointer-event\"\n\nexport interface UseFocusOnMouseDownProps {\n  enabled?: boolean\n  ref: React.RefObject<HTMLElement>\n  elements?: Array<React.RefObject<HTMLElement> | HTMLElement | null>\n}\n\n/**\n * Polyfill to get `relatedTarget` working correctly consistently\n * across all browsers.\n *\n * It ensures that elements receives focus on pointer down if\n * it's not the active element.\n *\n * @internal\n */\nexport function useFocusOnPointerDown(props: UseFocusOnMouseDownProps) {\n  const { ref, elements, enabled } = props\n\n  const isSafari = detectBrowser(\"Safari\")\n  const doc = () => getOwnerDocument(ref.current)\n\n  usePointerEvent(doc, \"pointerdown\", (event) => {\n    if (!isSafari || !enabled) return\n    const target = event.target as HTMLElement\n\n    const els = elements ?? [ref]\n    const isValidTarget = els.some((elementOrRef) => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef\n      return contains(el, target)\n    })\n\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault()\n      focus(target)\n    }\n  })\n}\n", "import {\n  contains,\n  focus,\n  FocusableElement,\n  getAllFocusable,\n  isRefObject,\n} from \"@chakra-ui/utils\"\nimport { useCallback, useRef } from \"react\"\nimport { useEventListener } from \"./use-event-listener\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\nimport { useUpdateEffect } from \"./use-update-effect\"\n\nexport interface UseFocusOnShowOptions {\n  visible?: boolean\n  shouldFocus?: boolean\n  preventScroll?: boolean\n  focusRef?: React.RefObject<FocusableElement>\n}\n\nconst defaultOptions: UseFocusOnShowOptions = {\n  preventScroll: true,\n  shouldFocus: false,\n}\n\nexport function useFocusOnShow<T extends HTMLElement>(\n  target: React.RefObject<T> | T,\n  options = defaultOptions,\n) {\n  const { focusRef, preventScroll, shouldFocus, visible } = options\n  const element = isRefObject(target) ? target.current : target\n  const autoFocusValue = shouldFocus && visible\n  const autoFocusRef = useRef(autoFocusValue)\n  const lastVisibleRef = useRef(visible)\n\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue\n    }\n    lastVisibleRef.current = visible\n  }, [visible, autoFocusValue])\n\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return\n    autoFocusRef.current = false\n\n    if (contains(element, document.activeElement as HTMLElement)) return\n\n    if (focusRef?.current) {\n      focus(focusRef.current, { preventScroll, nextTick: true })\n    } else {\n      const tabbableEls = getAllFocusable(element)\n      if (tabbableEls.length > 0) {\n        focus(tabbableEls[0], { preventScroll, nextTick: true })\n      }\n    }\n  }, [visible, preventScroll, element, focusRef])\n\n  useUpdateEffect(() => {\n    onFocus()\n  }, [onFocus])\n\n  useEventListener(\"transitionend\", onFocus, element)\n}\n", "import { useCallback, useRef, useState } from \"react\"\nimport { useUnmountEffect } from \"./use-unmount-effect\"\n\nexport function useForceUpdate() {\n  const unloadingRef = useRef(false)\n  const [count, setCount] = useState(0)\n\n  useUnmountEffect(() => {\n    unloadingRef.current = true\n  })\n\n  return useCallback(() => {\n    if (!unloadingRef.current) {\n      setCount(count + 1)\n    }\n  }, [count])\n}\n", "import { getOwnerWindow } from \"@chakra-ui/utils\"\nimport { useEffect, useState } from \"react\"\nimport { useEventListener } from \"./use-event-listener\"\n\nexport type UseAnimationStateProps = {\n  isOpen: boolean\n  ref: React.RefObject<HTMLElement>\n}\n\nexport function useAnimationState(props: UseAnimationStateProps) {\n  const { isOpen, ref } = props\n\n  const [mounted, setMounted] = useState(isOpen)\n  const [once, setOnce] = useState(false)\n\n  useEffect(() => {\n    if (!once) {\n      setMounted(isOpen)\n      setOnce(true)\n    }\n  }, [isOpen, once, mounted])\n\n  useEventListener(\n    \"animationend\",\n    () => {\n      setMounted(isOpen)\n    },\n    () => ref.current,\n  )\n\n  const hidden = isOpen ? false : !mounted\n\n  return {\n    present: !hidden,\n    onComplete() {\n      const win = getOwnerWindow(ref.current)\n      const evt = new win.CustomEvent(\"animationend\", { bubbles: true })\n      ref.current?.dispatchEvent(evt)\n    },\n  }\n}\n", "import { useMemo, useState } from \"react\"\n\ntype InitialState = boolean | (() => boolean)\n\n/**\n * React hook to manage boolean (on - off) states\n *\n * @param initialState the initial boolean state value\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-boolean\n */\nexport function useBoolean(initialState: InitialState = false) {\n  const [value, setValue] = useState(initialState)\n  const callbacks = useMemo(\n    () => ({\n      on: () => setValue(true),\n      off: () => setValue(false),\n      toggle: () => setValue((prev) => !prev),\n    }),\n    [],\n  )\n  return [value, callbacks] as const\n}\n", "import { useState, useCallback, useEffect } from \"react\"\nimport copy from \"copy-to-clipboard\"\n\nexport interface UseClipboardOptions {\n  /**\n   * timeout delay (in ms) to switch back to initial state once copied.\n   */\n  timeout?: number\n  /**\n   * Set the desired MIME type\n   */\n  format?: string\n}\n\n/**\n * React hook to copy content to clipboard\n *\n * @param value the text or value to copy\n * @param {Number} [optionsOrTimeout=1500] optionsOrTimeout - delay (in ms) to switch back to initial state once copied.\n * @param {Object} optionsOrTimeout\n * @param {string} optionsOrTimeout.format - set the desired MIME type\n * @param {number} optionsOrTimeout.timeout - delay (in ms) to switch back to initial state once copied.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-clipboard\n */\nexport function useClipboard(\n  value: string,\n  optionsOrTimeout: number | UseClipboardOptions = {},\n) {\n  const [hasCopied, setHasCopied] = useState(false)\n\n  const [valueState, setValueState] = useState(value)\n  useEffect(() => setValueState(value), [value])\n\n  const { timeout = 1500, ...copyOptions } =\n    typeof optionsOrTimeout === \"number\"\n      ? { timeout: optionsOrTimeout }\n      : optionsOrTimeout\n\n  const onCopy = useCallback(() => {\n    const didCopy = copy(valueState, copyOptions)\n    setHasCopied(didCopy)\n  }, [valueState, copyOptions])\n\n  useEffect(() => {\n    let timeoutId: number | null = null\n\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false)\n      }, timeout)\n    }\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [timeout, hasCopied])\n\n  return {\n    value: valueState,\n    setValue: setValueState,\n    onCopy,\n    hasCopied,\n  }\n}\n", "import { useRef } from \"react\"\n\ntype InitFn<T> = () => T\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConst`\n * you can ensure that initializers don't execute twice or more.\n */\nexport function useConst<T extends any>(init: T | InitFn<T>): T {\n  // Use useRef to store the value because it's the least expensive built-in\n  // hook that works here. We could also use `useState` but that's more\n  // expensive internally due to reducer handling which we don't need.\n  const ref = useRef<T | null>(null)\n\n  if (ref.current === null) {\n    ref.current = typeof init === \"function\" ? (init as InitFn<T>)() : init\n  }\n\n  return ref.current as T\n}\n", "import { getBox, BoxModel } from \"@chakra-ui/utils\"\nimport { useRef, useState } from \"react\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\n\n/**\n * React hook to measure a component's dimensions\n *\n * @param ref ref of the component to measure\n * @param observe if `true`, resize and scroll observers will be turned on\n *\n * @deprecated use the `useSize` hook instead\n *\n * ```jsx\n * import { useSize } from \"@chakra-ui/react-use-size\"\n * ```\n */\nexport function useDimensions(\n  ref: React.RefObject<HTMLElement>,\n  observe?: boolean,\n) {\n  const [dimensions, setDimensions] = useState<BoxModel | null>(null)\n  const rafId = useRef<number>()\n\n  useSafeLayoutEffect(() => {\n    function measure() {\n      const node = ref.current\n      if (!node) return\n      rafId.current = requestAnimationFrame(() => {\n        const boxModel = getBox(node)\n        setDimensions(boxModel)\n      })\n    }\n\n    measure()\n\n    if (observe) {\n      window.addEventListener(\"resize\", measure)\n      window.addEventListener(\"scroll\", measure)\n    }\n\n    return () => {\n      if (observe) {\n        window.removeEventListener(\"resize\", measure)\n        window.removeEventListener(\"scroll\", measure)\n      }\n\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n    }\n  }, [observe])\n\n  return dimensions\n}\n"],
  "mappings": "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",
  "names": ["copy", "format", "err", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "useReactId", "import_react", "import_react", "props", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "copy", "import_react", "import_react"]
}
